/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package UserRegMav;
import java.util.*;
import java.util.function.Predicate;
public class UserRegMain {
	
	public boolean validFirstName(String first) throws UserRegException{
		checkNullEmpty(first);
		Predicate<String> pred= n -> n.matches("^[A-Z]{1}[a-z]{2,}");
		if(pred.test(first))
		return true;
		else
			throw new UserRegException(UserRegException.ExceptionType.INVALID_FIRSTNAME, "Enter proper first name");
		
	}
	public void checkNullEmpty(String st) throws UserRegException
	{
		Predicate<String> check_empty= n -> n.matches("");
		Predicate<String> check_null= n -> n.matches(null);
		if(check_empty.test(st))
			throw new UserRegException(UserRegException.ExceptionType.ENTERED_EMPTY, "Enter proper user input");
		if(check_null.test(st))
			throw new UserRegException(UserRegException.ExceptionType.ENTERED_NULL, "Enter proper user input");

	}

	public boolean validLastName(String last) throws UserRegException{
		checkNullEmpty(last);
		Predicate<String> pred= n -> n.matches("^[A-Z]{1}[a-z]{2,}");
		if(pred.test(last))
		return true;
		
		else
			throw new UserRegException(UserRegException.ExceptionType.INVALID_LASTNAME, "Enter proper last name");
		
	}

	public boolean emailValidity(String email) throws UserRegException{
		checkNullEmpty(email);
		Predicate<String> pred= n -> n.matches("^(abc)[_+.-]{0,1}[a-zA-Z]*[@]{1}(bridgelabz|gmail|yahoo|abc)[.]{1}(co|com|net)[.]{0,1}[a-z]{0,2}");
		if(pred.test(email))
		return true;		
		else
			throw new UserRegException(UserRegException.ExceptionType.INVALID_EMAIL, "Enter proper email");
		
	}

	public boolean validMobileNumber(String number) throws UserRegException {
		checkNullEmpty(number);
		Predicate<String> pred=n -> n.matches("^[0-9]{2}\\s{1}[1-9]{1}[0-9]{9}");
		if(pred.test(number))
			return true;
			
		else
			throw new UserRegException(UserRegException.ExceptionType.INVALID_MOBILE, "Enter proper mobile number");
	}

	public boolean validPassword(String pass) throws UserRegException{
		checkNullEmpty(pass);
		Predicate<String> pred=n -> n.matches("[A-Z]+[a-z]*[0-9]+[_.+-]{1}");
		if(pred.test(pass)&&pass.length()>=8)
			return true;
		else
			throw new UserRegException(UserRegException.ExceptionType.INVALID_PASSWORD, "Enter proper password");
	}
	
}
